{"version":3,"sources":["types/index.js","utils/pinata.js","utils/store/store_contract.js","components/store/ReceiveCoupon.js","components/store/ReceiveCouponBox.js","components/Banner.js","utils/store/store_pinata.js","utils/store/nft.js","components/store/MintCouponBox.js","components/store/Coupon.js","components/MessageAlert.js","components/store/CouponDropzone.js","components/store/RegisterCouponBox.js","components/user/RefreshCouponList.js","components/store/CouponList.js","pages/StoreMain.js","utils/user/user_contracts.js","components/user/RedeemCouponBox.js","components/user/Coupon.js","utils/user/load_coupons.js","components/user/ClaimCouponBox.js","components/user/CouponList.js","pages/UserMain.js","utils/wallet.js","components/LoginButton.js","components/ModeSelector.js","components/test.jpeg","components/App.js","reportWebVitals.js","index.js"],"names":["WalletMode","contractAddress","gatewayAddress","gatewayToken","pageBackgroundColor","require","config","axios","getPinJsonByURI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","couponURI","requestURL","wrap","_context","prev","next","concat","abrupt","get","headers","credentials","then","response","success","pinJson","data","catch","error","console","log","message","stop","_x","apply","arguments","contractABI","web3","getStoreCouponList","address","transactionParameters","parsedData","couponUsages","couponUsageList","i","couponUsage","agg","_i","_Object$entries","_Object$entries$_i","key","value","trim","status","eth","Contract","window","contract","sent","to","from","ethereum","selectedAddress","methods","getPendingCoupons","encodeABI","request","method","params","abi","decodeParameters","length","push","reduce","acc","cur","count","Object","entries","_slicedToArray","t0","receiveCoupon","_ref2","_callee2","_context2","consumeCoupons","_x2","ReceiveCoupon","walletAddress","setOpenReceive","setCouponUsageList","_useState","useState","_useState2","coupon","setCoupon","_useState3","_useState4","loading","setLoading","useEffect","clickReceiveCoupon","_ref3","contractResponse","_jsxs","Grid","children","Label","size","style","margin","_jsx","Icon","name","String","substring","Detail","couponName","Button","color","onClick","ReceiveCouponBox","openReceive","blink","setBlink","Modal","closeIcon","open","trigger","Header","as","verticalAlign","Group","className","cursor","onClose","onOpen","icon","content","Content","map","index","Actions","Banner","mode","divided","Row","Column","float","width","location","reload","textAlign","process","secret","getPinList","keyvalues","stringKeyValues","url","op","JSON","stringify","pinata_api_key","pinata_secret_api_key","pinList","rows","pinFileToIPFS","file","couponUnit","couponDescription","FormData","append","post","maxBodyLength","_boundary","pinataUrl","IpfsHash","_x3","_x4","_x5","_x6","pinJSONToIPFS","_callee3","JSONBody","_context3","_x7","mintNFT","metadata","pinataResponse","tokenURI","rand","txHash","image","ipfs_pin_hash","Math","random","toString","issueCoupon","MintCouponBox","userAddress","setUserAddress","mintDisable","setMintDisable","_useState5","_useState6","_useState7","_useState8","openMintInfo","setOpenMintInfo","_useState9","_useState10","openTxInfo","setOpenTxInfo","_useState11","_useState12","setStatus","_useState13","_useState14","setRand","onMintPressed","_yield$mintNFT","_rand","_status","centered","display","flexDirection","justifyContent","Form","Field","id","control","Input","placeholder","required","onChange","e","target","toLowerCase","valueOf","Popup","QRCode","Description","Coupon","idx","marginBottom","Card","Image","src","crossOrigin","alt","extra","MessageAlert","alertVisible","setAlertVisible","Message","hidden","onDismiss","position","top","left","transform","CouponDropzone","onChangeImage","onDrop","useCallback","files","_useDropzone","useDropzone","getRootProps","getInputProps","_objectSpread","Segment","primary","RegisterCouponBox","setCouponName","setCouponUnit","setCouponDescription","setFile","setImage","hovered","setHovered","openRegister","setOpenRegister","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","alertMessage","setAlertMessage","_useState21","_useState22","onRegisterPressed","onMouseOver","onMouseLeave","corner","label","TextArea","input_file","URL","createObjectURL","RefreshCouponList","refreshCallback","onRefreshPressed","CouponList","couponList","setCouponList","columns","alignItems","right","Container","StoreMain","backgroundColor","height","getUserCouponList","getUserCoupons","tokenIds","couponURIs","claimCoupon","couponCode","couponId","redeemCoupon","couponIds","RedeemCouponBox","storeAddress","setStoreAddress","couponNumber","setCouponNumber","openRedeemInfo","setOpenRedeemInfo","redeemEnable","setRedeemEnable","undefined","couponCount","onRedeemPressed","useCouponResponse","slice","Number","disabled","load_coupons","couponInfo","couponURIList","couponJsons","newJson","ClaimCouponBox","setCouponCode","addCoupon","setAddCoupon","onClaimPressed","claimResponse","loadResponse","UserMain","connectWallet","addressArray","obj","href","getCurrentWalletConnected","LoginButton","setWalletAddress","setMode","isLoading","setIsLoading","addWalletListener","on","accounts","_yield$getCurrentWall","connectWalletPressed","walletResponse","ModeSelector","App","openMain","setOpenMain","openStore","setOpenStore","openUser","setOpenUser","setTimeout","TransitionablePortal","transition","animation","duration","main_img","fontSize","fontWeight","List","horizontal","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a44cea7.chunk.js","sourcesContent":["export const WalletMode = {\n    LOGOUT : -1,\n    NONE : 0,\n    USER : 1,\n    STORE : 2\n};\n\nexport const contractAddress = \"0x1560Cb1E8918E7fB369fb623a1b628637Cca22e5\";\n\n// export const gatewayAddress = \"https://harlequin-adverse-quelea-169.mypinata.cloud/ipfs/\"\nexport const gatewayAddress = \"https://tan-casual-dog-715.mypinata.cloud/ipfs/\"\nexport const gatewayToken = \"INcIawltcOkj6tfO64Ul0dkF4bYwqO23m_FZXIH-ZmmO9tVQhBh5Oafd_FmQe_5P\"\n\nexport const pageBackgroundColor = \"#F8E8EE\"","import { gatewayToken } from \"types\";\n\nrequire('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nconst getPinJsonByURI = async (couponURI) => {\n    const requestURL = `${couponURI}?pinataGatewayToken=${gatewayToken}`\n    return axios\n        .get(requestURL, {\n            headers: {\n                'Content-Type': \"application/json\"\n            },\n            credentials: 'same-origin'\n        })\n        .then(function (response) {\n            return {\n                success: true,\n                pinJson: response.data,\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n        });\n};\n\nexport { getPinJsonByURI };","import { parse } from \"dotenv\";\nimport { contractAddress } from \"types\";\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\nexport const getStoreCouponList = async (address) => {\n    if (address.trim() == \"\") {\n      return {\n        success: false,\n        status: \"❗Please make sure all fields are completed before minting.\",\n      };\n    }\n\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n    const transactionParameters = {\n      to: contractAddress, // Required except during contract publications.\n      from: window.ethereum.selectedAddress, // must match user's active address.\n      data: window.contract.methods\n        .getPendingCoupons()\n        .encodeABI(),\n    };\n\n    try {\n      const data = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [transactionParameters],\n      });\n      const parsedData = web3.eth.abi.decodeParameters(['address[]', 'string[]'], data);\n      let couponUsages = [];\n      let couponUsageList = [];\n\n      for (let i = 0; i < parsedData[0].length; i++) {\n          let couponUsage = { address: parsedData[0][i], couponURI: parsedData[1][i] };\n          couponUsages.push(couponUsage);\n      }\n\n      let agg = couponUsages.reduce((acc, cur) => {\n          if (acc[cur.address]) {\n              acc[cur.address].count = acc[cur.address].count + 1;\n          } else {\n              acc[cur.address] = {couponURI: cur.couponURI, count: 1};\n          }\n          return acc;\n      }, {})\n\n      for (let[key, value] of Object.entries(agg)) {\n          couponUsageList.push({address: key, couponURI: value.couponURI, count: value.count});\n      }\n\n      return {\n          success: true,\n          couponUsageList: couponUsageList\n      };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"😥 Something went wrong: \" + error.message,\n      };\n    }\n  };\n\nexport const receiveCoupon = async (address) => {\n  if (address.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .consumeCoupons(address)\n      .encodeABI(),\n  };\n\n  try {\n    const data = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n    const parsedData = web3.eth.abi.decodeParameters(['bool'], data);\n\n    return {\n        success: true\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong: \" + error.message,\n    };\n  }\n}","import { useEffect, useState } from \"react\";\nimport { getPinJsonByURI } from \"utils/pinata.js\";\nimport { receiveCoupon, getStoreCouponList } from \"utils/store/store_contract\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Grid,\n    Card,\n    Segment,\n    Label,\n    Button,\n    Header\n  } from 'semantic-ui-react'\n\n\nconst ReceiveCoupon = ({walletAddress, couponUsage, setOpenReceive, setCouponUsageList}) => {\n    const [coupon, setCoupon] = useState(null);\n    const [loading, setLoading] = useState(false);\n    useEffect(async () => {\n        const data = await getPinJsonByURI(couponUsage.couponURI);\n        setCoupon(data.pinJson)\n    });\n\n    const clickReceiveCoupon = async () => {\n        setLoading(true);\n        const data = await receiveCoupon(couponUsage.address);\n        if (data.success) {\n            setOpenReceive(false);\n            const contractResponse = await getStoreCouponList(walletAddress);\n            if (contractResponse.success) {\n                setCouponUsageList(contractResponse.couponUsageList)\n            } else {\n                console.log(contractResponse.message)\n            }\n        } \n        setLoading(false);\n    }\n\n    return (\n        <Grid>\n            <Label size=\"big\" style={{margin: \"5px\"}}>\n                <Icon name='user' />\n                {String(couponUsage.address).substring(0, 6) +\n                \"..\" +\n                String(couponUsage.address).substring(40)}\n                <Label.Detail>\n                    {coupon === null ? (\n                        \"loading...\"\n                    ) : (\n                        \" Coupon \" + \n                        String(coupon.couponName) +\n                        \" x \" +\n                        String(couponUsage.count)\n                    )}\n                </Label.Detail>\n            </Label>\n            {loading ? (\n                <Button size=\"small\" color='green' style={{margin: \"5px\"}}>\n                    <Icon name='circle notch' loading /> Receive\n                </Button>\n            ) : (\n                <Button size=\"small\" color=\"green\" style={{margin: \"5px\"}} onClick={clickReceiveCoupon}>\n                    Receive\n                </Button>\n            )}\n        </Grid>\n    )\n};\n\nexport default ReceiveCoupon;","import { useEffect, useState } from \"react\";\nimport \"css/blink.css\"\nimport ReceiveCoupon from \"components/store/ReceiveCoupon\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Modal,\n    Button,\n    Header\n  } from 'semantic-ui-react'\n\nconst ReceiveCouponBox = ({walletAddress, couponUsageList, setCouponUsageList}) => {\n    const [openReceive, setOpenReceive] = useState(false);\n    const [blink, setBlink] = useState(false);\n\n    useEffect(async () => {\n        if (couponUsageList.length > 0) {\n            setBlink(true);\n        } else {\n            setBlink(false);\n        }\n    }, [couponUsageList]);\n\n    return (\n        <Modal\n            closeIcon\n            open={openReceive}\n            trigger={\n                <Header as='h3' verticalAlign=\"middle\">\n                    {blink ? (\n                        <Icon.Group size='big' className=\"blinking\" style={{\n                            color: \"#FFB84C\",\n                            cursor: \"grab\"\n                        }}>\n                            <Icon name='bell'/>\n                        </Icon.Group>\n                    ) : (\n                        <Icon.Group size='big' style={{\n                            cursor: \"grab\"\n                        }}>\n                            <Icon name='bell' />\n                        </Icon.Group>\n                    )}\n                </Header>\n            }\n            onClose={() => setOpenReceive(false)}\n            onOpen={() => setOpenReceive(true)}\n            >\n            <Header icon='archive' content='Coupon usage' />\n            <Modal.Content>\n                {couponUsageList.map((couponUsage, index) => (\n                    <ReceiveCoupon walletAddress={walletAddress} couponUsage={couponUsage} setOpenReceive={setOpenReceive} setCouponUsageList={setCouponUsageList}/>\n                ))}\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='red' onClick={() => setOpenReceive(false)} >\n                    <Icon name='remove' /> Close\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n    \nexport default ReceiveCouponBox;","import { useEffect, useState } from \"react\";\nimport { WalletMode } from \"../types\";\nimport ReceiveCouponBox from \"components/store/ReceiveCouponBox\";\n\nimport {\n    Header,\n    Icon,\n    Grid\n  } from 'semantic-ui-react'\n\nconst Banner = ({mode, walletAddress, couponUsageList, setCouponUsageList}) => {\n    const reload = () => {\n        window.location.reload();\n    }\n\n    return (\n        <Grid divided='vertically'>\n            <Grid.Row verticalAlign=\"bottom\">\n            <Grid.Column float=\"left\" width={3}>\n                <Header as='h3'>\n                    <span onClick={reload} style={{ cursor: \"grab\" }}>\n                        {mode === WalletMode.STORE ? (\n                            <Icon.Group size='big'>\n                                <Icon name='home' />\n                            </Icon.Group>\n                        ) : (\n                            <Icon.Group size='big'>\n                                <Icon name='child' />\n                            </Icon.Group>\n                        )}\n                    </span>\n                </Header>\n            </Grid.Column>\n            <Grid.Column float=\"left\" width={10}>\n                <Header as='h3' style={{textAlign: \"center\"}}>\n                    Welcome &nbsp;\n                    {String(walletAddress).substring(0, 6) +\n                    \"..\" +\n                    String(walletAddress).substring(40)}\n                </Header>\n            </Grid.Column>\n            {mode === WalletMode.STORE ? (\n                <Grid.Column float=\"right\" width={3} textAlign=\"right\">\n                    <ReceiveCouponBox walletAddress={walletAddress} couponUsageList={couponUsageList} setCouponUsageList={setCouponUsageList}/>\n                </Grid.Column>\n            ) : (\n                <div></div>\n            )}\n            </Grid.Row>\n            <Grid.Row>\n            </Grid.Row>\n        </Grid>\n    )\n}\n\nexport default Banner;","import { gatewayAddress } from \"types\";\n\nrequire('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nconst getPinList = async (walletAddress) => {\n    const keyvalues = new Object({\n        \"walletAddress\": {\n            value : walletAddress,\n            op: \"eq\",\n        }\n    });\n\n    const stringKeyValues = JSON.stringify(keyvalues);\n    const url = `https://api.pinata.cloud/data/pinList?status=pinned&metadata[keyvalues]=${stringKeyValues}`;\n\n    return axios\n        .get(url, {\n            headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n            return {\n                success: true,\n                pinList: response.data.rows,\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n        });\n};\n\nconst pinFileToIPFS = async (file, walletAddress, couponName, couponUnit, couponDescription) => {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append('file', file);\n    data.append('pinataMetadata', JSON.stringify({\n        'name': couponName,\n        keyvalues: {\n            'walletAddress': walletAddress,\n            'couponUnit': couponUnit,\n            'couponDescription': couponDescription,\n        }\n    }));\n\n    return axios\n        .post(url, data, {\n            maxBodyLength: 'Infinity',\n            headers: {\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }   \n        })\n        .then(function (response) {\n            return {\n                success: true,\n                pinataUrl: gatewayAddress + response.data.IpfsHash\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            } \n        });\n};\n\nconst pinJSONToIPFS = async(JSONBody) => {\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n    return axios\n        .post(url, JSONBody, {\n            headers: {\n                'Content-Type': 'application/json',\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n           return {\n               success: true,\n               pinataUrl: gatewayAddress + response.data.IpfsHash\n           };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n           \n        });\n};\n\nexport { getPinList, pinFileToIPFS, pinJSONToIPFS };","import { pinJSONToIPFS } from \"utils/store/store_pinata.js\";\nimport { contractAddress, gatewayAddress } from \"types\";\nrequire(\"dotenv\").config();\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\n\n\nasync function loadContract() {\n  return new web3.eth.Contract(contractABI, contractAddress);\n}\n\nexport const mintNFT = async (coupon, address) => {\n  if (address.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n\n  // make metadata\n  const metadata = new Object();\n  metadata.couponName = coupon.metadata.name;\n  metadata.couponUnit = coupon.metadata.keyvalues.couponUnit;\n  metadata.couponDescription = coupon.metadata.keyvalues.couponDescription;\n  metadata.image = `${gatewayAddress}${coupon.ipfs_pin_hash}`;\n\n  const pinataResponse = await pinJSONToIPFS(metadata);\n  if (!pinataResponse.success) {\n    return {\n      success: false,\n      status: \"😢 Something went wrong while uploading your tokenURI.\",\n    };\n  }\n  const tokenURI = pinataResponse.pinataUrl;\n  const rand = Math.random().toString(36)\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .issueCoupon(address, rand, tokenURI)\n      .encodeABI(),\n  };\n\n  try {\n    const txHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n    return {\n      success: true,\n      rand: rand,\n      status:\n        \"✅ Check out your transaction on Etherscan: https://baobab.scope.klaytn.com/tx/\" +\n        txHash,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong: \" + error.message,\n    };\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport { \n    mintNFT\n  } from \"utils/store/nft.js\"; \nimport _ from 'lodash'\nimport QRCode from 'qrcode.react';\nimport { \n    Grid,\n    Header,\n    Icon,\n    Popup,\n    Form,\n    Input,\n    Modal,\n    Button\n} from \"semantic-ui-react\";\n\n\nconst MintCouponBox = ({walletAddress, coupon}) => {\n    const [userAddress, setUserAddress] = useState(\"\");\n    const [mintDisable, setMintDisable] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [openMintInfo, setOpenMintInfo] = useState(false)\n    const [openTxInfo, setOpenTxInfo] = useState(false)\n    const [status, setStatus] = useState(\"\");\n    const [rand, setRand] = useState(\"\");\n\n    useEffect(async () => {\n        setUserAddress(\"\");\n    }, []);\n\n\n    const onChangeUserAddress = (e) => {\n        if (String(e.target.value).toLowerCase().valueOf() === String(walletAddress).toLowerCase().valueOf()) {\n            setMintDisable(true)\n        }\n        setUserAddress(e.target.value);\n    };\n\n    const onMintPressed = async () => {\n        if (!mintDisable) {\n            setLoading(true)\n            const { rand, status } = await mintNFT(coupon, userAddress)\n            setLoading(false)\n            setStatus(status)\n            setRand(rand)\n            setOpenTxInfo(true)\n            setOpenMintInfo(false)\n        }\n    };\n\n    return (\n        <div>\n            <Modal\n                closeIcon\n                onClose={() => setOpenMintInfo(false)}\n                onOpen={() => setOpenMintInfo(true)}\n                open={openMintInfo}\n                trigger={loading ? (\n                    <Button color='green' style={{width: \"100%\"}}>\n                        <Icon name='circle notch' loading /> Mint\n                    </Button>\n                ) : (\n                    <Button color='green' style={{width: \"100%\"}}>\n                    <Icon name='checkmark' /> Mint\n                    </Button>\n                )}\n                centered={true}\n                style={{width: \"50%\"}}\n                >\n                <Header icon='add' content='Mint coupon' />\n                <Modal.Actions style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\"}}>\n                    <Form.Field\n                        id='form-input-control-name'\n                        control={Input}\n                        placeholder='User address'\n                        required={true}\n                        onChange={onChangeUserAddress}\n                        />\n                    {mintDisable ? (\n                        <Popup content='You cannot self mint a coupon.' \n                        trigger={\n                            <Button color='grey'>\n                                Disabled\n                            </Button>} \n                        />\n                    ) : loading ? (\n                        <Button color='green'>\n                            <Icon name='circle notch' loading /> Mint\n                        </Button>\n                    ) : (\n                        <Button color='green' onClick={() => {\n                            setOpenTxInfo(false)\n                            onMintPressed()\n                        }}>\n                        <Icon name='checkmark' /> Mint\n                        </Button>\n                    )}\n                </Modal.Actions>\n            </Modal>\n            <Modal\n                closeIcon\n                onClose={() => setOpenTxInfo(false)}\n                onOpen={() => setOpenTxInfo(true)}\n                open={openTxInfo}\n                centered={true}\n                >\n                <Header icon='archive' content='Transaction result' />\n                <Modal.Content style={{textAlign: 'center'}}>\n                    <QRCode value={rand} />\n                    <Modal.Description>\n                        <p>{status}</p>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='red' onClick={() => setOpenTxInfo(false)}>\n                    <Icon name='remove' /> Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    );\n}\n\nexport default MintCouponBox;","import { useEffect, useState } from \"react\";\nimport { gatewayAddress, gatewayToken } from \"types\";\nimport MintCouponBox from \"components/store/MintCouponBox.js\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Button,\n    Card,\n    Grid\n} from 'semantic-ui-react'\n\nconst Coupon = ({walletAddress, coupon, idx}) => {\n    return (\n        <div style={{marginBottom: \"5px\"}}>\n            <Card centered={true}>\n                <Image src={`${gatewayAddress}${coupon.ipfs_pin_hash}/?pinataGatewayToken=${gatewayToken}`} crossOrigin=\"anonymous\" alt={coupon.name} />\n                <Card.Content textAlign=\"center\">\n                    <Card.Header>{coupon.metadata.name}</Card.Header>\n                    <Card.Description textAlign=\"left\">\n                        {coupon.metadata.keyvalues.couponDescription}\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra textAlign=\"left\">\n                    Redemption unit: {coupon.metadata.keyvalues.couponUnit}\n                </Card.Content>\n                <MintCouponBox walletAddress={walletAddress} coupon={coupon}/>\n            </Card>\n        </div>\n    )\n}\n    \nexport default Coupon;","import { useEffect, useState } from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\nconst MessageAlert = ({message, success, alertVisible, setAlertVisible}) => {\n    return (\n        <Message success={success}\n                hidden={!alertVisible}\n                onDismiss={() => setAlertVisible(false)}\n                style={{\n                    width: '20%',\n                    position: 'fixed', \n                    top: '0%', \n                    left: '50%', \n                    transform: 'translate(-50%, 0%)',\n                    verticalAlign: 'middle',\n                    textAlign: 'left'\n                }}>\n            <Message.Header>\n                {success ? \"Success\" : \"Error\"}\n            </Message.Header>\n            <p>\n            {message}\n            </p>\n        </Message>\n    )\n}\n\nexport default MessageAlert;","import { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from 'react-dropzone'\nimport { \n    Header,\n    Segment,\n    Icon,\n    Button\n } from \"semantic-ui-react\";\n\nconst CouponDropzone = ({onChangeImage}) => {\n    const onDrop = useCallback(\n        (files) => {\n            onChangeImage(files[0]);\n        },\n        [onChangeImage]\n      );\n\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n    return (\n        <div {...getRootProps()}>\n            <Segment placeholder>\n                <Header icon>\n                <Icon name='file image outline' />\n                Drag and drop an image here or click to select an image\n                </Header>\n                <Button primary>Add Image</Button>\n                <input {...getInputProps()} />\n            </Segment>\n        </div>\n    )\n}\n\nexport default CouponDropzone;","import { useEffect, useState } from \"react\";\nimport MessageAlert from \"components/MessageAlert.js\";\nimport CouponDropzone from \"components/store/CouponDropzone.js\"\nimport { pinFileToIPFS } from \"utils/store/store_pinata.js\";\nimport {\n    Input,\n    Form,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    TextArea,\n    Image\n  } from 'semantic-ui-react'\n\nconst RegisterCouponBox = ({walletAddress}) => {\n    const [couponName, setCouponName] = useState(\"\");\n    const [couponUnit, setCouponUnit] = useState(\"\");\n    const [couponDescription, setCouponDescription] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [image, setImage] = useState(null);\n    const [hovered, setHovered] = useState(false);\n    const [openRegister, setOpenRegister] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [alertVisible, setAlertVisible] = useState(false)\n    const [alertMessage, setAlertMessage] = useState(\"\")\n    const [status, setStatus] = useState(false);\n\n\n    useEffect(async () => {\n        setCouponDescription(\"\");\n        setCouponName(\"\");\n    }, []);\n\n    const onChangeName = (e) => {\n        setCouponName(e.target.value);\n    };\n    const onChangeUnit = (e) => {\n        setCouponUnit(e.target.value);\n    };\n    const onChangeDescription = (e) => {\n        setCouponDescription(e.target.value);\n    };\n    const onChangeImage = (input_file) => {\n        setFile(input_file)\n        setImage(URL.createObjectURL(input_file));\n    };\n\n    const onRegisterPressed = async () => {\n        setLoading(true);\n        const data = await pinFileToIPFS(file, walletAddress, couponName, couponUnit, couponDescription);\n        setLoading(false);\n        setOpenRegister(false);\n        setImage(null);\n        if (data.success) {\n            setStatus(true)\n            setAlertMessage(\"Coupon registered successfully!\")\n        } else {\n            setStatus(false)\n            setAlertMessage(\"Coupon registration failed!\")\n        }\n\n        setAlertVisible(true)\n    };\n\n    return (\n        <div>\n            {alertVisible ? (\n                <MessageAlert message={alertMessage} success={status} alertVisible={alertVisible} setAlertVisible={setAlertVisible}></MessageAlert>\n            ) : (\n                <div></div>\n            )}\n            <Modal\n                closeIcon\n                open={openRegister}\n                trigger={\n                    <Icon.Group size='big'\n                        onMouseOver={() => setHovered(true)} \n                        onMouseLeave={() => setHovered(false)}\n                        style={{cursor: 'grabbing'}}\n                    >\n                        <Icon name='ticket' />\n                        {hovered ? (\n                            <Icon corner loading name='add'/>\n                        ) : (\n                            <Icon corner name='add'/>\n                        )}\n                    </Icon.Group>\n                }\n                onClose={() => setOpenRegister(false)}\n                onOpen={() => setOpenRegister(true)}\n                >\n                <Header icon='add' content='Add new coupon' />\n                <Modal.Content>\n                    <Form>\n                        <Form.Field\n                            id='form-input-control-name'\n                            control={Input}\n                            label='Coupon name'\n                            placeholder='Coupon name'\n                            required={true}\n                            onChange={onChangeName}\n                        />\n                        <Form.Field\n                            id='form-input-control-name'\n                            control={Input}\n                            label='Redemption unit'\n                            placeholder='10'\n                            required={true}\n                            onChange={onChangeUnit}\n                        />\n                        <Form.Field\n                            id='form-textarea-control-description'\n                            control={TextArea}\n                            label='Description'\n                            placeholder='Description'\n                            required={true}\n                            onChange={onChangeDescription}\n                        />\n                        {image ? (\n                            <Image src={image} />\n                        ) : (\n                            <CouponDropzone onChangeImage={onChangeImage} />\n                        )}\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='red' onClick={() => setOpenRegister(false)}>\n                    <Icon name='remove' /> Cancel\n                    </Button>\n                    {loading ? (\n                        <Button color='green'>\n                            <Icon name='circle notch' loading /> Add\n                        </Button>\n                    ) : (\n                        <Button color='green' onClick={onRegisterPressed}>\n                        <Icon name='checkmark' /> Add\n                        </Button>\n                    )}\n                </Modal.Actions>\n            </Modal>\n        </div>\n    );\n}\n\nexport default RegisterCouponBox;","import { useEffect, useState } from \"react\";\nimport {\n    Input,\n    Form,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    TextArea,\n    Image\n  } from 'semantic-ui-react'\n\nconst RefreshCouponList = ({refreshCallback}) => {\n    const [hovered, setHovered] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(async () => {\n    }, []);\n\n    const onRefreshPressed = async () => {\n        setLoading(true);\n        refreshCallback();\n        setLoading(false);\n    };\n\n    return (\n        <Icon.Group size='large'\n            onMouseOver={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            style={{ cursor: 'grabbing' }}\n            onClick={() => onRefreshPressed()}\n        >\n            {loading ? (\n                <Icon loading color='grey' name='spinner' />\n            ) : hovered ? (\n                <Icon loading color='grey' name='redo alternate' />\n            ) : (\n                <Icon color='grey' name='redo alternate' />\n            )}\n        </Icon.Group>\n    );\n}\n\nexport default RefreshCouponList;","import { useEffect, useState } from \"react\";\nimport Coupon from 'components/store/Coupon.js';\nimport RegisterCouponBox from 'components/store/RegisterCouponBox.js';\nimport RefreshCouponList from 'components/user/RefreshCouponList.js';\nimport { getPinList } from \"utils/store/store_pinata.js\";\nimport { getStoreCouponList } from \"utils/store/store_contract.js\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    Grid,\n    Segment\n} from 'semantic-ui-react'\n\nconst CouponList = ({ walletAddress, couponList, setCouponList, setCouponUsageList }) => {\n    const refreshCallback = async () => {\n        const pinataResponse = await getPinList(walletAddress);\n        if (pinataResponse.success) {\n            setCouponList(pinataResponse.pinList);\n        } else {\n            console.log(pinataResponse.message)\n        }\n\n        const contractResponse = await getStoreCouponList(walletAddress);\n        if (contractResponse.success) {\n            setCouponUsageList(contractResponse.couponUsageList)\n        } else {\n            console.log(contractResponse.message)\n        }\n    }\n\n    return (\n        <div>\n        <Grid divided='vertically'>\n            <Grid.Row columns={1}>\n                <Grid.Column>\n                    <Header as='h3' style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", position: \"relative\" }}>\n                            <RegisterCouponBox walletAddress={walletAddress} />\n                            &nbsp;\n                            Coupon types\n                        <view style={{ position: 'absolute', right: '5%' }}>\n                            <RefreshCouponList refreshCallback={refreshCallback} />\n                        </view>\n                    </Header>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n        <Grid centered={true}>\n            {couponList.length === 0 ? (\n                <Container width=\"100%\" style={{ margin: \"10px\" }}>\n                    <Header as='h3' style={{ textAlign: \"center\" }}>\n                        <i>Try add your own coupon type!</i>\n                    </Header>\n                </Container>\n            ) : (\n                couponList.map((coupon) => (\n                    <Coupon walletAddress={walletAddress} coupon={coupon} />\n                )))}\n        </Grid>\n        </div>\n    )\n}\n\nexport default CouponList;","import { useEffect, useState } from \"react\";\nimport Banner from \"components/Banner.js\";\nimport CouponList from \"components/store/CouponList.js\";\nimport { getPinList } from \"utils/store/store_pinata.js\";\nimport { getStoreCouponList } from \"utils/store/store_contract.js\";\nimport { WalletMode } from \"../types\";\nimport { pageBackgroundColor } from \"types\";\nimport { Segment } from \"semantic-ui-react\";\n\nconst StoreMain = ({walletAddress}) => {\n    const [couponList, setCouponList] = useState([]);\n    const [couponUsageList, setCouponUsageList] = useState([]);\n\n    useEffect(async () => {\n        const pinataResponse = await getPinList(walletAddress);\n        if (pinataResponse.success) {\n            setCouponList(pinataResponse.pinList);\n        } else {\n            console.log(pinataResponse.message)\n        }\n\n        const contractResponse = await getStoreCouponList(walletAddress);\n        if (contractResponse.success) {\n            setCouponUsageList(contractResponse.couponUsageList)\n        } else {\n            console.log(contractResponse.message)\n        }\n    }, []);\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            backgroundColor: pageBackgroundColor,\n            height: \"100vh\"\n        }}>\n            <Segment style={{\n                width: \"50%\"\n            }}>\n                <Banner mode={WalletMode.STORE} walletAddress={walletAddress} couponUsageList={couponUsageList} setCouponUsageList={setCouponUsageList}/>\n                <CouponList walletAddress={walletAddress} couponList={couponList} setCouponList={setCouponList} setCouponUsageList={setCouponUsageList}/>\n            </Segment>\n        </div>\n    );\n}\n\nexport default StoreMain;","import { contractAddress } from \"types\";\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\nexport const getUserCouponList = async () => {\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n    const transactionParameters = {\n      to: contractAddress, // Required except during contract publications.\n      from: window.ethereum.selectedAddress, // must match user's active address.\n      data: window.contract.methods\n        .getUserCoupons()\n        .encodeABI(),\n    };\n\n    try {\n      const data = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [transactionParameters],\n      });\n      const parsedData = web3.eth.abi.decodeParameters(['address[]', 'string[]'], data);\n      return {\n          success: true,\n          tokenIds: parsedData[0],\n          couponURIs: parsedData[1]\n      };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"😥 Something went wrong with getUserCouponList: \" + error.message,\n      };\n    }\n}\n\nexport const claimCoupon = async (couponCode) => {\n  if (couponCode.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .claimCoupon(couponCode)\n      .encodeABI(),\n  };\n\n  try {\n    const data = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n    const parsedData = web3.eth.abi.decodeParameters(['uint256'], data);\n\n    return {\n        success: true,\n        couponId: parsedData\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong with claimCoupon: \" + error.message,\n    };\n  }\n}\n\nexport const redeemCoupon = async (address, couponIds) => {\n  if (address.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .redeemCoupon(address, couponIds)\n      .encodeABI(),\n  };\n\n  try {\n    await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return {\n        success: true,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong with claimCoupon: \" + error.message,\n    };\n  }\n}","import { useEffect, useState } from \"react\";\nimport { redeemCoupon } from \"utils/user/user_contracts\"; \nimport { \n    Grid,\n    Header,\n    Icon,\n    Dropdown,\n    Form,\n    Input,\n    Modal,\n    Button\n} from \"semantic-ui-react\";\n\nconst RedeemCouponBox = ({coupon}) => {\n    const [storeAddress, setStoreAddress] = useState(\"\");\n    const [couponNumber, setCouponNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [openRedeemInfo, setOpenRedeemInfo] = useState(false);\n    const [redeemEnable, setRedeemEnable] = useState(false);\n\n    useEffect(async () => {\n        let couponUnit = coupon.couponUnit === undefined ? 1 : coupon.couponUnit;\n        setRedeemEnable(coupon.couponCount >= couponUnit);\n    }, [coupon]);\n\n    const onChangeStoreAddress = (e) => {\n        setStoreAddress(e.target.value);\n    };\n\n    const onChangeCouponNumber = (e) => {\n        setCouponNumber(e.target.value);\n    }\n\n    const onRedeemPressed = async () => {\n        setLoading(true)\n        const useCouponResponse = await redeemCoupon(storeAddress, coupon.couponIds.slice(0, Number(couponNumber)));\n        if (!useCouponResponse.success) {\n            console.log(useCouponResponse.status);\n        }\n        setLoading(false)\n        setOpenRedeemInfo(false)\n    };\n\n    return (\n        <div>\n            <Modal\n                closeIcon\n                onClose={() => setOpenRedeemInfo(false)}\n                onOpen={() => setOpenRedeemInfo(true)}\n                open={openRedeemInfo}\n                trigger={ redeemEnable ? (\n                    loading ? (\n                        <Button color='green' style={{width: \"100%\"}}>\n                            <Icon name='circle notch' loading /> Redeem\n                        </Button>\n                    ) : (\n                        <Button color='green' style={{width: \"100%\"}}>\n                        <Icon name='checkmark' /> Redeem\n                        </Button>\n                    )\n                ) : (\n                    <Button color='grey' disabled='true' style={{width: \"100%\"}}>\n                    <Icon name='checkmark' /> Not Enough Coupons\n                    </Button>\n                )}\n                centered={true}\n                style={{width: \"50%\"}}\n                >\n                <Header icon='add' content='Redeem coupon' />\n                <Modal.Content>\n                <Form>\n                    <Form.Field\n                        id='form-input-control-name'\n                        control={Input}\n                        label='Store address'\n                        placeholder='Store address'\n                        required={true}\n                        onChange={onChangeStoreAddress}\n                    />\n                    <Form.Field\n                        id='form-input-control-name'\n                        control={Input}\n                        label='Number of coupons'\n                        placeholder={\n                            coupon.couponUnit === undefined\n                            ? \"Redemption Unit : 1\"\n                            : \"Redemption Unit : \" + coupon.couponUnit\n                        }\n                        required={true}\n                        onChange={onChangeCouponNumber}\n                    />\n                </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='red' onClick={() => setOpenRedeemInfo(false)}>\n                    <Icon name='remove' /> Cancel\n                    </Button>\n                    {loading ? (\n                        <Button color='green'>\n                            <Icon name='circle notch' loading /> Redeem\n                        </Button>\n                    ) : (\n                        <Button color='green' onClick={onRedeemPressed}>\n                        <Icon name='checkmark' /> Redeem\n                        </Button>\n                    )}\n                </Modal.Actions>\n            </Modal>\n        </div>\n    );\n}\n\nexport default RedeemCouponBox;","import { useEffect, useState } from \"react\";\nimport RedeemCouponBox from \"components/user/RedeemCouponBox.js\";\nimport { gatewayToken } from \"types\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Grid,\n    Card,\n    Segment\n  } from 'semantic-ui-react'\n\n\nconst Coupon = ({coupon}) => {\n    return (\n        <div style={{marginBottom: \"5px\"}}>\n            <Card centered={true}>\n                <Image src={`${coupon.image}/?pinataGatewayToken=${gatewayToken}`} alt={coupon.couponName} crossOrigin=\"anonymous\" />\n                <Card.Content textAlign=\"center\">\n                    <Card.Header>{coupon.couponName}</Card.Header>\n                    <Card.Description style={{textAlign: \"left\"}}>\n                        {coupon.couponDescription}\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    Coupon count: {coupon.couponCount} / <b>{\n                        coupon.couponUnit === undefined\n                        ? 1\n                        : coupon.couponUnit\n                    }</b>\n                </Card.Content>\n                <RedeemCouponBox coupon={coupon}/>\n            </Card>\n        </div>\n    )\n}\n\nexport default Coupon;","import { getUserCouponList } from \"utils/user/user_contracts.js\";\nimport { getPinJsonByURI } from \"utils/pinata.js\";\n\nconst load_coupons = async () => {\n    const contractResponse = await getUserCouponList();\n    if (contractResponse.success) {        \n        let couponInfo = {};\n        let couponURIList = [];\n        for (let i=0; i<contractResponse.couponURIs.length; i++) {\n            if (contractResponse.couponURIs[i] in couponInfo) {\n                couponInfo[contractResponse.couponURIs[i]][0] += 1;\n                couponInfo[contractResponse.couponURIs[i]][1].push(contractResponse.tokenIds[i]);\n            } else {\n                couponInfo[contractResponse.couponURIs[i]] = [1, [contractResponse.tokenIds[i]]];\n                couponURIList.push(contractResponse.couponURIs[i]);\n            }\n        }\n\n        let couponJsons = [];\n        for (let i=0; i<couponURIList.length; i++) {\n            try {\n                const pinataResponse = await getPinJsonByURI(couponURIList[i]);\n                if (pinataResponse.success) {\n                    let newJson = pinataResponse.pinJson;\n                    newJson.couponCount = couponInfo[couponURIList[i]][0];\n                    newJson.couponIds = couponInfo[couponURIList[i]][1];\n                    couponJsons.push(newJson);\n                } else {\n                    console.log(\"Error during getting json from uri: \" + pinataResponse.message);\n                }\n            } catch (error) {\n                console.log(\"pinataResponse error: \" + error);\n            }\n        }\n\n        return {\n            success: true,\n            couponList: couponJsons\n        }\n    } else {\n        return {\n            success: false,\n            status: contractResponse.status\n        }\n    }\n}\n\nexport default load_coupons;","import { useEffect, useState } from \"react\";\nimport { claimCoupon } from \"utils/user/user_contracts.js\";\nimport load_coupons from \"utils/user/load_coupons\";\nimport {\n    Input,\n    Form,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    TextArea,\n    Image\n  } from 'semantic-ui-react'\n\nconst ClaimCouponBox = ({setCouponList}) => {\n    const [couponCode, setCouponCode] = useState(\"\");\n    const [hovered, setHovered] = useState(false);\n    const [addCoupon, setAddCoupon] = useState(false)\n    const [loading, setLoading] = useState(false);\n\n    useEffect(async () => {\n        setCouponCode(\"\");\n    }, []);\n\n    const onChangeCode = (e) => {\n        setCouponCode(e.target.value);\n    };\n\n    const onClaimPressed = async () => {\n        setLoading(true);\n        const claimResponse = await claimCoupon(couponCode);\n        if (!claimResponse.success) {\n            console.log(claimResponse.message)\n        }\n\n        const loadResponse = await load_coupons();\n        if (loadResponse.success) {\n            setCouponList(loadResponse.couponList);\n        } else {\n            console.log(loadResponse.status);\n        }\n\n        setLoading(false);\n        setAddCoupon(false);\n    };\n\n    return (\n        <Modal\n            closeIcon\n            open={addCoupon}\n            trigger={\n                <Icon.Group size='big'\n                    onMouseOver={() => setHovered(true)} \n                    onMouseLeave={() => setHovered(false)}\n                    style={{cursor: 'grabbing'}}\n                >\n                    <Icon name='ticket' />\n                    {hovered ? (\n                        <Icon corner loading name='add'/>\n                    ) : (\n                        <Icon corner name='add'/>\n                    )}\n                </Icon.Group>\n            }\n            onClose={() => setAddCoupon(false)}\n            onOpen={() => setAddCoupon(true)}\n            >\n            <Header icon='add' content='Add new coupon' />\n            <Modal.Content>\n                <Form>\n                    <Form.Field\n                        id='form-input-control-name'\n                        control={Input}\n                        label='Coupon code'\n                        placeholder='Coupon code'\n                        required={true}\n                        onChange={onChangeCode}\n                    />\n                </Form>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='red' onClick={() => setAddCoupon(false)}>\n                <Icon name='remove' /> Cancel\n                </Button>\n                {loading ? (\n                    <Button color='green'>\n                        <Icon name='circle notch' loading /> Add\n                    </Button>\n                ) : (\n                    <Button color='green' onClick={onClaimPressed}>\n                    <Icon name='checkmark' /> Add\n                    </Button>\n                )}\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default ClaimCouponBox;","import { useEffect, useState } from \"react\";\nimport Coupon from 'components/user/Coupon.js';\nimport ClaimCouponBox from 'components/user/ClaimCouponBox.js';\nimport RefreshCouponList from 'components/user/RefreshCouponList.js';\nimport load_coupons from \"utils/user/load_coupons\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    Grid\n} from 'semantic-ui-react'\n\nconst CouponList = ({ couponList, setCouponList }) => {\n    const refreshCallback = async () => {\n        const loadResponse = await load_coupons();\n        if (loadResponse.success) {\n            setCouponList(loadResponse.couponList);\n        } else {\n            console.log(loadResponse.status);\n        } \n    }\n    return (\n        <div>\n        <Grid divided='vertically'>\n            <Grid.Row columns={1}>\n                <Grid.Column>\n                    <Header as='h3' style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", position: \"relative\"}}>\n                        <div>\n                            <ClaimCouponBox setCouponList={setCouponList} />\n                            &nbsp;\n                            My coupons\n                        </div>\n                        <view style={{ position: 'absolute', right: '5%' }}>\n                            <RefreshCouponList refreshCallback={refreshCallback} />\n                        </view>\n                    </Header>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n        <Grid centered={true}>\n            {couponList.length === 0 ? (\n                <Container width=\"100%\" style={{ margin: \"10px\" }}>\n                    <Header as='h3' style={{ textAlign: \"center\" }}>\n                        <i>Try add your own coupon!</i>\n                    </Header>\n                </Container>\n            ) : (\n                couponList.map((coupon) => (\n                    <Coupon coupon={coupon} />\n                    )))}\n        </Grid>\n        </div>\n    )\n}\n\nexport default CouponList;","import { useEffect, useState } from \"react\";\nimport Banner from \"components/Banner.js\";\nimport CouponList from \"components/user/CouponList.js\";\nimport load_coupons from \"utils/user/load_coupons\";\nimport { pageBackgroundColor } from \"types\";\nimport { WalletMode } from \"../types\";\nimport { Segment } from \"semantic-ui-react\";\n\nconst UserMain = ({walletAddress}) => {\n    const [couponList, setCouponList] = useState([]);\n\n    useEffect(async () => {\n        const loadResponse = await load_coupons();\n        if (loadResponse.success) {\n            setCouponList(loadResponse.couponList);\n        } else {\n            console.log(loadResponse.status);\n        }\n    }, []);\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            backgroundColor: pageBackgroundColor,\n            height: \"100vh\"\n        }}>\n            <Segment style={{\n                width: \"50%\"\n            }}>\n                <Banner mode={WalletMode.USER} walletAddress={walletAddress} />\n                <CouponList couponList={couponList} setCouponList={setCouponList}/>\n            </Segment>\n        </div>\n    );\n}\n\nexport default UserMain;","export const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const obj = {\n          status: \"👆🏽 Write a message in the text-field above.\",\n          address: addressArray[0],\n        };\n        return obj;\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: (\n          <span>\n            <p>\n              {\" \"}\n              🦊{\" \"}\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install Metamask, a virtual Ethereum wallet, in your\n                browser.\n              </a>\n            </p>\n          </span>\n        ),\n      };\n    }\n  };\n  \n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"👆🏽 Login\",\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"🦊 Connect to Metamask using the top right button.\",\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: (\n          <span>\n            <p>\n              {\" \"}\n              🦊{\" \"}\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install Metamask, a virtual Ethereum wallet, in your\n                browser.\n              </a>\n            </p>\n          </span>\n        ),\n      };\n    }\n  };\n  ","import { useEffect, useState } from \"react\";\nimport { WalletMode } from \"types\";\nimport {\n    connectWallet,\n    getCurrentWalletConnected\n  } from \"utils/wallet.js\";\nimport { Dimmer, Loader, Card, Icon, Image } from \"semantic-ui-react\";\n\n\n\nconst LoginButton = ({setWalletAddress, setMode, setStatus}) => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(async () => {\n        const { address, status } = await getCurrentWalletConnected()\n        setWalletAddress(address)\n        setStatus(status)\n\n        if (address !== \"\") {\n            setMode(WalletMode.NONE)\n        }\n\n        addWalletListener()\n    }, []);\n\n    function addWalletListener() {\n        if (window.ethereum) {\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\n            if (accounts.length > 0) {\n                setWalletAddress(accounts[0])\n                setMode(WalletMode.NONE)\n            } else {\n                setWalletAddress(\"\")\n            }\n          })\n        } else {\n          setStatus(\n            <p>\n              {\" \"}\n              🦊 <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install MetaMask, a virtual Ethereum wallet, in your browser.\n              </a>\n            </p>\n          )\n        }\n    }\n    \n    const connectWalletPressed = async () => {\n        setIsLoading(true);\n        const walletResponse = await connectWallet()\n        setIsLoading(false);\n        setStatus(walletResponse.status)\n        setWalletAddress(walletResponse.address)\n        if (walletResponse.address !== \"\") {\n            setMode(WalletMode.NONE)\n        }\n    };\n\n      \n    return (\n      <div>\n          <Card onClick={connectWalletPressed} centered={true}>\n            <div style={{\n              \"textAlign\": \"center\",\n              \"paddingTop\": \"30px\",\n              \"paddinBbottom\": \"30px\"\n            }}>\n              {isLoading ? (\n                <div>\n                  <Icon.Group size='huge'>\n                    <Icon loading size='big' color='black' name='circle notch' />\n                    <Icon color='black' name='user'/>\n                  </Icon.Group>\n                </div>\n              ) : (\n                <div>\n                  <Icon.Group size='huge'>\n                    <Icon size='big' color='black' name='circle outline' />\n                    <Icon color='black' name='user'/>\n                  </Icon.Group>\n                </div>\n              )}\n            </div>\n            <Card.Content textAlign=\"center\">\n              <Card.Header>Welcome!</Card.Header>\n              <Card.Description>\n                Log-in with your wallet \n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name='users' />\n                22 users logged-in\n              </a>\n            </Card.Content>\n          </Card>\n      </div>\n    )\n}\n\nexport default LoginButton;","import { WalletMode } from \"../types\"; \nimport { Dimmer, Loader, Card, Icon, Image, Grid } from \"semantic-ui-react\";\n\nconst ModeSelector = ({setMode}) => {\n    const onStorePressed = () => {\n        setMode(WalletMode.STORE)\n    };\n\n    const onUserPressed = () => {\n        setMode(WalletMode.USER)\n    };\n\n    return (\n        <Grid>\n            <Grid.Column key={1} width={8}>                \n                <Card onClick={onStorePressed} centered={true}>\n                    <div style={{\n                        \"textAlign\": \"center\",\n                        \"paddingTop\": \"30px\",\n                        \"paddingBottom\": \"30px\"\n                    }}>\n                        <Icon.Group size='huge'>\n                            <Icon size='big' color='black' name='circle outline' />\n                            <Icon color='black' name='home'/>\n                        </Icon.Group>\n                    </div>\n                    <Card.Content textAlign=\"center\">\n                        <Card.Header>Store</Card.Header>\n                        <Card.Description>\n                            Stores who will issue NFT coupons go here\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            </Grid.Column>\n\n            <Grid.Column key={2} width={8}>\n                <Card onClick={onUserPressed} centered={true}>\n                    <div style={{\n                        \"textAlign\": \"center\",\n                        \"paddingTop\": \"30px\",\n                        \"paddingBottom\": \"30px\"\n                    }}>\n                        <Icon.Group size='huge'>\n                            <Icon size='big' color='black' name='circle outline' />\n                            <Icon color='black' name='child'/>\n                        </Icon.Group>\n                    </div>\n                    <Card.Content textAlign=\"center\">\n                       <Card.Header>User</Card.Header>\n                        <Card.Description>\n                            Users who will use NFT coupons go here\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nexport default ModeSelector;","export default __webpack_public_path__ + \"static/media/test.01e9901b.jpeg\";","import 'semantic-ui-css/semantic.min.css'\nimport { useEffect, useState } from \"react\";\nimport { WalletMode } from \"../types\";\nimport StoreMain from \"pages/StoreMain.js\";\nimport UserMain from \"pages/UserMain.js\";\nimport LoginButton from \"components/LoginButton.js\";\nimport ModeSelector from \"components/ModeSelector.js\";\nimport main_img from './test.jpeg'\n\nimport {\n  Container,\n  Image,\n  Icon,\n  List,\n  TransitionablePortal,\n  Segment\n} from 'semantic-ui-react'\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [mode, setMode] = useState(\"\");\n  const [openMain, setOpenMain] = useState(true);\n  const [openStore, setOpenStore] = useState(false);\n  const [openUser, setOpenUser] = useState(false);\n\n  useEffect(async () => {\n    setStatus(status)\n    setMode(WalletMode.LOGOUT)\n  }, []);\n\n  useEffect(async () => {\n    if (mode === WalletMode.LOGOUT || mode === WalletMode.NONE) {\n      setOpenMain(true);\n      setOpenStore(false);\n      setOpenUser(false);\n    } else if (mode === WalletMode.STORE) {\n      setOpenMain(false);\n      setTimeout(() => {\n        setOpenStore(true);\n        setOpenUser(false);\n      }, 1000);\n    } else if (mode === WalletMode.USER) {\n      setOpenMain(false);\n      setTimeout(() => {\n        setOpenStore(false);\n        setOpenUser(true);\n      }, 1000);;\n    }\n  }, [mode]);\n\n  return (\n    <Container>\n      <TransitionablePortal\n        open={openMain}\n        transition={{ animation : \"fade up\", duration: 1000 }}\n      >\n        <Segment>\n          <div style={{\n                \"backgroundColor\": \"black\",\n          }}>\n              <Image src={main_img} alt=\"Main Image\" style={{\n                  \"minHeight\": \"140px\",\n                  \"opacity\": \"0.9\",\n                  \"brightness\": \"0.5\"\n              }} />\n          </div>\n          <div style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n          }}>\n              {mode === WalletMode.LOGOUT ? (\n                <LoginButton setWalletAddress={setWalletAddress} setMode={setMode} setStatus={setStatus} />\n              ) : mode === WalletMode.NONE ? (\n                <ModeSelector setMode={setMode} />\n              ) : (\n                <div></div>\n              )}\n          </div>\n          <div style={{\n              position: 'absolute',\n              top: '10%',\n              left: '0',\n              color: 'black',\n              textAlign: 'center',\n              width: '100%'\n          }}>\n              <p style={{fontSize: '40px', fontWeight: 'bold'}}>Make your own <span style={{color: 'red'}}>NFT</span> coupon!</p>\n              <List size='huge' horizontal>\n                <List.Item>\n                  <Icon name='computer' />\n                  <List.Content>\n                    <List.Header>Liberate yourself from offline coupons</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <Icon name='world' />\n                  <List.Content>\n                    <List.Header>Avoid contracts with centralized platforms</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <Icon name='wi-fi' />\n                  <List.Content>\n                    <List.Header>Freely establish and promote your brand online</List.Header>\n                  </List.Content>\n                </List.Item>\n              </List>\n          </div>\n        </Segment>\n      </TransitionablePortal>\n      <TransitionablePortal\n        open={openStore}\n        transition={{ animation : \"fade up\", duration: 0 }}\n      >\n        <StoreMain walletAddress={walletAddress} />\n      </TransitionablePortal>\n      <TransitionablePortal\n        open={openUser}\n        transition={{ animation : \"fade up\", duration: 0 }}\n      >\n        <UserMain walletAddress={walletAddress} />\n      </TransitionablePortal>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}