{"version":3,"sources":["types/index.js","utils/pinata.js","utils/store/store_contract.js","components/store/ReceiveCoupon.js","components/store/ReceiveCouponBox.js","components/Banner.js","components/store/Coupon.js","components/store/CouponDropzone.js","utils/store/store_pinata.js","components/store/RegisterCouponBox.js","components/store/CouponList.js","utils/store/nft.js","components/store/MintCouponBox.js","pages/StoreMain.js","components/user/Coupon.js","components/user/RegisterCouponBox.js","components/user/CouponList.js","utils/user/user_contracts.js","pages/UserMain.js","utils/wallet.js","components/LoginButton.js","components/ModeSelector.js","components/test.jpeg","components/App.js","reportWebVitals.js","index.js"],"names":["WalletMode","contractAddress","require","config","axios","getPinJsonByURI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","couponURI","wrap","_context","prev","next","abrupt","get","then","response","success","pinJson","data","catch","error","console","log","message","stop","_x","apply","arguments","contractABI","web3","getStoreCouponList","address","transactionParameters","parsedData","couponUsages","couponUsageList","i","couponUsage","agg","_i","_Object$entries","_Object$entries$_i","key","value","trim","status","eth","Contract","window","contract","sent","to","from","ethereum","selectedAddress","methods","getPendingCoupons","encodeABI","request","method","params","abi","decodeParameters","length","push","reduce","acc","cur","count","Object","entries","_slicedToArray","t0","receiveCoupon","_ref2","_callee2","_context2","consumeCoupons","_x2","ReceiveCoupon","walletAddress","setOpenReceive","setCouponUsageList","_useState","useState","_useState2","coupon","setCoupon","_useState3","_useState4","loading","setLoading","useEffect","clickReceiveCoupon","_ref3","contractResponse","_jsxs","Grid","children","Label","size","style","margin","_jsx","Icon","name","String","substring","Detail","couponName","Button","color","onClick","ReceiveCouponBox","openReceive","blink","setBlink","Modal","closeIcon","open","trigger","Header","as","verticalAlign","Group","className","cursor","onClose","onOpen","icon","content","Content","map","index","Actions","Banner","mode","divided","Row","Column","float","width","location","reload","textAlign","Coupon","Card","centered","Image","src","concat","ipfs_pin_hash","alt","metadata","Description","keyvalues","couponDescription","CouponDropzone","onChangeImage","onDrop","useCallback","files","_useDropzone","useDropzone","getRootProps","getInputProps","_objectSpread","Segment","placeholder","primary","process","secret","getPinList","stringKeyValues","url","op","JSON","stringify","headers","pinata_api_key","pinata_secret_api_key","pinList","rows","pinFileToIPFS","file","FormData","append","post","maxBodyLength","_boundary","pinataUrl","IpfsHash","_x3","_x4","_x5","pinJSONToIPFS","_callee3","JSONBody","_context3","_x6","RegisterCouponBox","setCouponName","setCouponDescription","_useState5","_useState6","setFile","_useState7","_useState8","image","setImage","_useState9","_useState10","_useState11","_useState12","hovered","setHovered","_useState13","_useState14","openRegister","setOpenRegister","_useState15","_useState16","onRegisterPressed","hash","onMouseOver","onMouseLeave","corner","Form","Field","id","control","Input","label","required","onChange","e","target","TextArea","input_file","URL","createObjectURL","CouponList","couponList","columns","mintNFT","pinataResponse","tokenURI","rand","txHash","Math","random","toString","issueCoupon","MintCouponBox","userAddress","setUserAddress","openTxInfo","setOpenTxInfo","setStatus","setRand","stateOptions","_","text","onMintPressed","_yield$mintNFT","filter","floated","Dropdown","search","selection","options","marginBottom","QRCode","StoreMain","setCouponList","getUserCouponList","getUserCoupons","call","tokenIds","couponURIs","UserMain","userAddresses","connectWallet","addressArray","obj","href","getCurrentWalletConnected","LoginButton","setWalletAddress","setMode","isLoading","setIsLoading","addWalletListener","on","accounts","_yield$getCurrentWall","connectWalletPressed","walletResponse","extra","ModeSelector","App","openMain","setOpenMain","openStore","setOpenStore","openUser","setOpenUser","setTimeout","Container","TransitionablePortal","transition","animation","duration","main_img","position","top","left","transform","fontSize","fontWeight","List","horizontal","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.445f803d.chunk.js","sourcesContent":["export const WalletMode = {\n    LOGOUT : -1,\n    NONE : 0,\n    USER : 1,\n    STORE : 2\n};\n\nexport const contractAddress = \"0x28732443701Ad3302A8Baadf41504E53676F6171\";\n","require('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nconst getPinJsonByURI = async (couponURI) => {\n    return axios\n        .get(couponURI)\n        .then(function (response) {\n            return {\n                success: true,\n                pinJson: response.data,\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n        });\n};\n\nexport { getPinJsonByURI };","import { parse } from \"dotenv\";\nimport { contractAddress } from \"types\";\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\nexport const getStoreCouponList = async (address) => {\n    if (address.trim() == \"\") {\n      return {\n        success: false,\n        status: \"❗Please make sure all fields are completed before minting.\",\n      };\n    }\n\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n    const transactionParameters = {\n      to: contractAddress, // Required except during contract publications.\n      from: window.ethereum.selectedAddress, // must match user's active address.\n      data: window.contract.methods\n        .getPendingCoupons()\n        .encodeABI(),\n    };\n\n    try {\n      const data = await window.ethereum.request({\n        method: \"eth_call\",\n        params: [transactionParameters],\n      });\n      const parsedData = web3.eth.abi.decodeParameters(['address[]', 'string[]'], data);\n      let couponUsages = [];\n      let couponUsageList = [];\n\n      for (let i = 0; i < parsedData[0].length; i++) {\n          let couponUsage = { address: parsedData[0][i], couponURI: parsedData[1][i] };\n          couponUsages.push(couponUsage);\n      }\n\n      let agg = couponUsages.reduce((acc, cur) => {\n          if (acc[cur.address]) {\n              acc[cur.address].count = acc[cur.address].count + 1;\n          } else {\n              acc[cur.address] = {couponURI: cur.couponURI, count: 1};\n          }\n          return acc;\n      }, {})\n\n      for (let[key, value] of Object.entries(agg)) {\n          couponUsageList.push({address: key, couponURI: value.couponURI, count: value.count});\n      }\n\n      return {\n          success: true,\n          couponUsageList: couponUsageList\n      };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"😥 Something went wrong: \" + error.message,\n      };\n    }\n  };\n\nexport const receiveCoupon = async (address) => {\n  if (address.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .consumeCoupons(address)\n      .encodeABI(),\n  };\n\n  try {\n    const data = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n    const parsedData = web3.eth.abi.decodeParameters(['bool'], data);\n\n    return {\n        success: true\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong: \" + error.message,\n    };\n  }\n}","import { useEffect, useState } from \"react\";\nimport { getPinJsonByURI } from \"utils/pinata.js\";\nimport { receiveCoupon, getStoreCouponList } from \"utils/store/store_contract\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Grid,\n    Card,\n    Segment,\n    Label,\n    Button,\n    Header\n  } from 'semantic-ui-react'\n\n\nconst ReceiveCoupon = ({walletAddress, couponUsage, setOpenReceive, setCouponUsageList}) => {\n    const [coupon, setCoupon] = useState(null);\n    const [loading, setLoading] = useState(false);\n    useEffect(async () => {\n        const data = await getPinJsonByURI(couponUsage.couponURI);\n        setCoupon(data.pinJson)\n    });\n\n    const clickReceiveCoupon = async () => {\n        setLoading(true);\n        const data = await receiveCoupon(couponUsage.address);\n        if (data.success) {\n            setOpenReceive(false);\n            const contractResponse = await getStoreCouponList(walletAddress);\n            if (contractResponse.success) {\n                setCouponUsageList(contractResponse.couponUsageList)\n            } else {\n                console.log(contractResponse.message)\n            }\n        } \n        setLoading(false);\n    }\n\n    return (\n        <Grid>\n            <Label size=\"big\" style={{margin: \"5px\"}}>\n                <Icon name='user' />\n                {String(couponUsage.address).substring(0, 6) +\n                \"..\" +\n                String(couponUsage.address).substring(40)}\n                <Label.Detail>\n                    {coupon === null ? (\n                        \"loading...\"\n                    ) : (\n                        \" Coupon \" + \n                        String(coupon.couponName) +\n                        \" x \" +\n                        String(couponUsage.count)\n                    )}\n                </Label.Detail>\n            </Label>\n            {loading ? (\n                <Button size=\"small\" color='green' style={{margin: \"5px\"}}>\n                    <Icon name='circle notch' loading /> Receive\n                </Button>\n            ) : (\n                <Button size=\"small\" color=\"green\" style={{margin: \"5px\"}} onClick={clickReceiveCoupon}>\n                    Receive\n                </Button>\n            )}\n        </Grid>\n    )\n};\n\nexport default ReceiveCoupon;","import { useEffect, useState } from \"react\";\nimport \"css/blink.css\"\nimport ReceiveCoupon from \"components/store/ReceiveCoupon\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Modal,\n    Button,\n    Header\n  } from 'semantic-ui-react'\n\nconst ReceiveCouponBox = ({walletAddress, couponUsageList, setCouponUsageList}) => {\n    console.log(couponUsageList)\n    const [openReceive, setOpenReceive] = useState(false);\n    const [blink, setBlink] = useState(false);\n\n    useEffect(async () => {\n        if (couponUsageList.length > 0) {\n            setBlink(true);\n        }\n    });\n\n    return (\n        <Modal\n            closeIcon\n            open={openReceive}\n            trigger={\n                <Header as='h3' verticalAlign=\"middle\">\n                    {blink ? (\n                        <Icon.Group size='big' className=\"blinking\" style={{\n                            cursor: \"grab\"\n                        }}>\n                            <Icon name='bell' />\n                        </Icon.Group>\n                    ) : (\n                        <Icon.Group size='big' >\n                            <Icon name='bell' />\n                        </Icon.Group>\n                    )}\n                </Header>\n            }\n            onClose={() => setOpenReceive(false)}\n            onOpen={() => setOpenReceive(true)}\n            >\n            <Header icon='archive' content='Coupon usage' />\n            <Modal.Content>\n                {couponUsageList.map((couponUsage, index) => (\n                    <ReceiveCoupon walletAddress={walletAddress} couponUsage={couponUsage} setOpenReceive={setOpenReceive} setCouponUsageList={setCouponUsageList}/>\n                ))}\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='red' onClick={() => setOpenReceive(false)} >\n                    <Icon name='remove' /> Close\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n}\n    \nexport default ReceiveCouponBox;","import { useEffect, useState } from \"react\";\nimport { WalletMode } from \"../types\";\nimport ReceiveCouponBox from \"components/store/ReceiveCouponBox\";\n\nimport {\n    Header,\n    Icon,\n    Grid\n  } from 'semantic-ui-react'\n\nconst Banner = ({mode, walletAddress, couponUsageList, setCouponUsageList}) => {\n    const reload = () => {\n        window.location.reload();\n    }\n\n    return (\n        <Grid divided='vertically'>\n            <Grid.Row verticalAlign=\"bottom\">\n            <Grid.Column float=\"left\" width={13}>\n                <Header as='h3'>\n                    <span onClick={reload} style={{ cursor: \"grab\" }}>\n                        {mode === WalletMode.STORE ? (\n                            <Icon.Group size='big'>\n                                <Icon name='home' />\n                            </Icon.Group>\n                        ) : (\n                            <Icon.Group size='big'>\n                                <Icon name='child' />\n                            </Icon.Group>\n                        )}\n                    </span>\n                    Welcome &nbsp;\n                    {String(walletAddress).substring(0, 6) +\n                    \"..\" +\n                    String(walletAddress).substring(40)}                    \n                </Header>\n            </Grid.Column>\n            {mode === WalletMode.STORE ? (\n                <Grid.Column float=\"right\" width={3} textAlign=\"right\">\n                    <ReceiveCouponBox walletAddress={walletAddress} couponUsageList={couponUsageList} setCouponUsageList={setCouponUsageList}/>\n                </Grid.Column>\n            ) : (\n                <div></div>\n            )}\n            </Grid.Row>\n            <Grid.Row>\n            </Grid.Row>\n        </Grid>\n    )\n}\n\nexport default Banner;","import { useEffect, useState } from \"react\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Grid,\n    Card,\n    Segment\n  } from 'semantic-ui-react'\n\nconst Coupon = ({coupon}) => {\n    return (\n        <Card centered={true}>\n            <Image src={`https://gateway.pinata.cloud/ipfs/${coupon.ipfs_pin_hash}`} alt={coupon.name} />\n            <Card.Content textAlign=\"center\">\n                <Card.Header>{coupon.metadata.name}</Card.Header>\n                <Card.Description>\n                    {coupon.metadata.keyvalues.couponDescription}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    )\n}\n    \nexport default Coupon;","import { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from 'react-dropzone'\nimport { \n    Header,\n    Segment,\n    Icon,\n    Button\n } from \"semantic-ui-react\";\n\nconst CouponDropzone = ({onChangeImage}) => {\n    const onDrop = useCallback(\n        (files) => {\n            console.log(files[0]);\n            onChangeImage(files[0]);\n        },\n        [onChangeImage]\n      );\n\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n    return (\n        <div {...getRootProps()}>\n            <Segment placeholder>\n                <Header icon>\n                <Icon name='file image outline' />\n                Drag and drop an image here or click to select an image\n                </Header>\n                <Button primary>Add Image</Button>\n                <input {...getInputProps()} />\n            </Segment>\n        </div>\n    )\n}\n\nexport default CouponDropzone;","require('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nconst getPinList = async (walletAddress) => {\n    const keyvalues = new Object({\n        \"walletAddress\": {\n            value : walletAddress,\n            op: \"eq\",\n        }\n    });\n\n    const stringKeyValues = JSON.stringify(keyvalues);\n    const url = `https://api.pinata.cloud/data/pinList?status=pinned&metadata[keyvalues]=${stringKeyValues}`;\n\n    return axios\n        .get(url, {\n            headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n            return {\n                success: true,\n                pinList: response.data.rows,\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n        });\n};\n\nconst pinFileToIPFS = async (file, walletAddress, couponName, couponDescription) => {\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n    let data = new FormData();\n    data.append('file', file);\n    data.append('pinataMetadata', JSON.stringify({\n        'name': couponName,\n        keyvalues: {\n            'walletAddress': walletAddress,\n            'couponDescription': couponDescription,\n        }\n    }));\n\n    return axios\n        .post(url, data, {\n            maxBodyLength: 'Infinity',\n            headers: {\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }   \n        })\n        .then(function (response) {\n            return {\n                success: true,\n                pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n            };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            } \n        });\n};\n\nconst pinJSONToIPFS = async(JSONBody) => {\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n    return axios\n        .post(url, JSONBody, {\n            headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n           return {\n               success: true,\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n           };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n           \n        });\n};\n\nexport { getPinList, pinFileToIPFS, pinJSONToIPFS };","import { useEffect, useState } from \"react\";\nimport CouponDropzone from \"components/store/CouponDropzone.js\"\nimport { pinFileToIPFS } from \"utils/store/store_pinata.js\";\nimport {\n    Input,\n    Form,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    TextArea,\n    Image\n  } from 'semantic-ui-react'\n\nconst RegisterCouponBox = ({walletAddress}) => {\n    const [couponName, setCouponName] = useState(\"\");\n    const [couponDescription, setCouponDescription] = useState(\"\");\n    const [file, setFile] = useState(null);\n    const [image, setImage] = useState(null);\n    const [status, setStatus] = useState(\"\");\n    const [hovered, setHovered] = useState(false);\n    const [openRegister, setOpenRegister] = useState(false)\n    const [loading, setLoading] = useState(false);\n\n    useEffect(async () => {\n        setCouponDescription(\"\");\n        setCouponName(\"\");\n    }, []);\n\n    const onChangeName = (e) => {\n        setCouponName(e.target.value);\n    };\n    const onChangeDescription = (e) => {\n        setCouponDescription(e.target.value);\n    };\n    const onChangeImage = (input_file) => {\n        setFile(input_file)\n        setImage(URL.createObjectURL(input_file));\n    };\n\n    const onRegisterPressed = async () => {\n        setLoading(true);\n        const hash = await pinFileToIPFS(file, walletAddress, couponName, couponDescription);\n        console.log(hash);\n        setLoading(false);\n        setOpenRegister(false);\n    };\n\n    return (\n        <Modal\n            closeIcon\n            open={openRegister}\n            trigger={\n                <Icon.Group size='big'\n                    onMouseOver={() => setHovered(true)} \n                    onMouseLeave={() => setHovered(false)}\n                    style={{cursor: 'grabbing'}}\n                >\n                    <Icon name='ticket' />\n                    {hovered ? (\n                        <Icon corner loading name='add'/>\n                    ) : (\n                        <Icon corner name='add'/>\n                    )}\n                </Icon.Group>\n            }\n            onClose={() => setOpenRegister(false)}\n            onOpen={() => setOpenRegister(true)}\n            >\n            <Header icon='add' content='Add new coupon' />\n            <Modal.Content>\n                <Form>\n                    <Form.Field\n                        id='form-input-control-name'\n                        control={Input}\n                        label='Coupon name'\n                        placeholder='Coupon name'\n                        required={true}\n                        onChange={onChangeName}\n                    />\n                    <Form.Field\n                        id='form-textarea-control-description'\n                        control={TextArea}\n                        label='Description'\n                        placeholder='Description'\n                        required={true}\n                        onChange={onChangeDescription}\n                    />\n                    {image ? (\n                        <Image src={image} />\n                    ) : (\n                        <CouponDropzone onChangeImage={onChangeImage} />\n                    )}\n                </Form>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='red' onClick={() => setOpenRegister(false)}>\n                <Icon name='remove' /> Cancel\n                </Button>\n                {loading ? (\n                    <Button color='green'>\n                        <Icon name='circle notch' loading /> Add\n                    </Button>\n                ) : (\n                    <Button color='green' onClick={onRegisterPressed}>\n                    <Icon name='checkmark' /> Add\n                    </Button>\n                )}\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default RegisterCouponBox;","import { useEffect, useState } from \"react\";\nimport Coupon from 'components/store/Coupon.js';\nimport RegisterCouponBox from 'components/store/RegisterCouponBox.js';\nimport {\n    Container,\n    Image,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    Grid\n  } from 'semantic-ui-react'\n\nconst CouponList = ({walletAddress, couponList}) => {\n    return (\n        <Grid divided='vertically'>\n            <Grid.Row columns={1}>\n            <Grid.Column>\n                <Header as='h3'>\n                    <RegisterCouponBox walletAddress={walletAddress} />\n                    &nbsp;\n                    Coupon types\n                </Header>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                {couponList.map((coupon) => (\n                    <Coupon coupon={coupon} />\n                    ))}\n            </Grid.Row>  \n        </Grid>\n    )\n}\n\nexport default CouponList;","import { pinJSONToIPFS } from \"utils/store/store_pinata.js\";\nimport { contractAddress } from \"types\";\nrequire(\"dotenv\").config();\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\n\n\nasync function loadContract() {\n  return new web3.eth.Contract(contractABI, contractAddress);\n}\n\nexport const mintNFT = async (coupon, address) => {\n  if (address.trim() == \"\") {\n    return {\n      success: false,\n      status: \"❗Please make sure all fields are completed before minting.\",\n    };\n  }\n\n\n  // make metadata\n  const metadata = new Object();\n  metadata.couponName = coupon.metadata.name;\n  metadata.couponDescription = coupon.metadata.keyvalues.couponDescription;\n  metadata.image = `https://gateway.pinata.cloud/ipfs/${coupon.ipfs_pin_hash}`;\n\n  const pinataResponse = await pinJSONToIPFS(metadata);\n  if (!pinataResponse.success) {\n    return {\n      success: false,\n      status: \"😢 Something went wrong while uploading your tokenURI.\",\n    };\n  }\n  const tokenURI = pinataResponse.pinataUrl;\n  const rand = Math.random().toString(36)\n\n  window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n  const transactionParameters = {\n    to: contractAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress, // must match user's active address.\n    data: window.contract.methods\n      .issueCoupon(address, rand, tokenURI)\n      .encodeABI(),\n  };\n\n  try {\n    const txHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n    return {\n      success: true,\n      rand: rand,\n      status:\n        \"✅ Check out your transaction on Etherscan: https://baobab.scope.klaytn.com/tx/\" +\n        txHash,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: \"😥 Something went wrong: \" + error.message,\n    };\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport { \n    mintNFT\n  } from \"utils/store/nft.js\"; \nimport _ from 'lodash'\nimport QRCode from 'qrcode.react';\nimport { \n    Grid,\n    Header,\n    Icon,\n    Dropdown,\n    Form,\n    Input,\n    Modal,\n    Button\n} from \"semantic-ui-react\";\n\n\nconst MintCouponBox = ({couponList}) => {\n    const [couponName, setCouponName] = useState(\"\");\n    const [userAddress, setUserAddress] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [openTxInfo, setOpenTxInfo] = useState(false)\n    const [status, setStatus] = useState(\"\");\n    const [rand, setRand] = useState(\"\");\n\n    useEffect(async () => {\n        setCouponName(\"\");\n        setUserAddress(\"\");\n    }, []);\n\n    const stateOptions = _.map(couponList, (coupon) => ({\n        key: coupon.metadata.name,\n        text: coupon.metadata.name,\n        value: coupon.metadata.name,\n    }))\n\n    const onChangeCoupon = (e, data) => {\n        setCouponName(data.value);\n    };\n\n    const onChangeUserAddress = (e) => {\n        setUserAddress(e.target.value);\n    };\n\n    const onMintPressed = async () => {\n        setLoading(true)\n        const coupon = _.filter(couponList, (coupon) => coupon.metadata.name === couponName)[0];\n        const { rand, status } = await mintNFT(coupon, userAddress)\n        setLoading(false)\n        setStatus(status)\n        setRand(rand)\n        setOpenTxInfo(true)\n\n        console.log(rand)\n        console.log(status)\n    };\n\n    return (\n        <Grid divided='vertically' verticalAlign=\"middle\">\n            <Grid.Row>\n                <Grid.Column floated='left' width={7}>\n                    <Header as='h3'>\n                        <Icon.Group size='big'>\n                            <Icon name='send' />\n                        </Icon.Group>\n                        &nbsp;\n                        Mint coupons\n                    </Header>\n                </Grid.Column>\n                <Grid.Column floated='right' width={9}>\n                    <Grid columns={1}>\n                        <Grid.Column>\n                            <Form>\n                                <Dropdown placeholder='Select coupon' search selection options={stateOptions} onChange={onChangeCoupon}\n                                        style={{width: '80%', marginBottom: '5px'}} />\n                                <Form.Field\n                                id='form-input-control-name'\n                                control={Input}\n                                placeholder='User address'\n                                required={true}\n                                onChange={onChangeUserAddress}\n                                style={{width: '80%', marginBottom: '5px'}}\n                                />\n                            </Form>\n                            {loading ? (\n                                <Button color='green'>\n                                    <Icon name='circle notch' loading /> Mint\n                                </Button>\n                            ) : (\n                                <Button color='green' onClick={onMintPressed}>\n                                <Icon name='checkmark' /> Mint\n                                </Button>\n                            )}\n                        </Grid.Column>\n                    </Grid>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row></Grid.Row>\n            <Modal\n                closeIcon\n                onClose={() => setOpenTxInfo(false)}\n                onOpen={() => setOpenTxInfo(true)}\n                open={openTxInfo}\n                centered={true}\n                >\n                <Header icon='archive' content='Transaction result' />\n                <Modal.Content style={{textAlign: 'center'}}>\n                    <QRCode value={rand} />\n                    <Modal.Description>\n                        <p>{status}</p>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='red' onClick={() => setOpenTxInfo(false)}>\n                    <Icon name='remove' /> Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        </Grid>\n    );\n}\n\nexport default MintCouponBox;","import { useEffect, useState } from \"react\";\nimport Banner from \"components/Banner.js\";\nimport CouponList from \"components/store/CouponList.js\";\nimport MintCouponBox from \"components/store/MintCouponBox.js\";\nimport { getPinList } from \"utils/store/store_pinata.js\";\nimport { getStoreCouponList } from \"utils/store/store_contract.js\";\nimport { WalletMode } from \"../types\";\n\nconst StoreMain = ({walletAddress}) => {\n    const [couponList, setCouponList] = useState([]);\n    const [couponUsageList, setCouponUsageList] = useState([]);\n\n    useEffect(async () => {\n        const pinataResponse = await getPinList(walletAddress);\n        if (pinataResponse.success) {\n            setCouponList(pinataResponse.pinList);\n        } else {\n            console.log(pinataResponse.message)\n        }\n\n        const contractResponse = await getStoreCouponList(walletAddress);\n        if (contractResponse.success) {\n            setCouponUsageList(contractResponse.couponUsageList)\n        } else {\n            console.log(contractResponse.message)\n        }\n    }, []);\n\n    return (\n        <div>\n            <Banner mode={WalletMode.STORE} walletAddress={walletAddress} couponUsageList={couponUsageList} setCouponUsageList={setCouponUsageList}/>\n            <MintCouponBox couponList={couponList}/>\n            <CouponList walletAddress={walletAddress} couponList={couponList}/>\n        </div>\n    );\n}\n\nexport default StoreMain;","import { useEffect, useState } from \"react\";\nimport {\n    Container,\n    Image,\n    Icon,\n    Grid,\n    Card,\n    Segment\n  } from 'semantic-ui-react'\n\nconst Coupon = ({coupon}) => {\n    return (\n        <Card centered={true}>\n            <Image src={`https://gateway.pinata.cloud/ipfs/${coupon.ipfs_pin_hash}`} alt={coupon.name} />\n            <Card.Content textAlign=\"center\">\n                <Card.Header>{coupon.metadata.name}</Card.Header>\n                <Card.Description>\n                    {coupon.metadata.keyvalues.couponDescription}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    )\n}\n    \nexport default Coupon;","import { useEffect, useState } from \"react\";\nimport CouponDropzone from \"components/store/CouponDropzone.js\"\nimport {\n    Input,\n    Form,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    TextArea,\n    Image\n  } from 'semantic-ui-react'\n\nconst RegisterCouponBox = ({walletAddress}) => {\n    return (\n        <div></div>\n    )\n}\n\nexport default RegisterCouponBox;","import { useEffect, useState } from \"react\";\nimport Coupon from 'components/user/Coupon.js';\nimport RegisterCouponBox from 'components/user/RegisterCouponBox.js';\nimport {\n    Container,\n    Image,\n    Icon,\n    Header,\n    Button,\n    Modal,\n    Grid\n  } from 'semantic-ui-react'\n\nconst CouponList = ({walletAddress, couponList}) => {\n    return (\n        <Grid divided='vertically'>\n            <Grid.Row columns={1}>\n            <Grid.Column>\n                <Header as='h3'>\n                    <RegisterCouponBox walletAddress={walletAddress} />\n                    &nbsp;\n                    My coupons\n                </Header>\n            </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                {couponList.map((coupon) => (\n                    <Coupon coupon={coupon} />\n                    ))}\n            </Grid.Row>  \n        </Grid>\n    )\n}\n\nexport default CouponList;","import { contractAddress } from \"types\";\nconst contractABI = require(\"../../contract-abi.json\");\nconst Web3 = require('web3');\nconst web3 = new Web3('https://api.baobab.klaytn.net:8651/');\n\nexport const getUserCouponList = async () => {\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);\n\n    try {\n        const data = await window.contract.methods.getUserCoupons().call()\n        return {\n            success: true,\n            tokenIds: data[0],\n            couponURIs: data[1]\n        };\n    } catch (error) {\n      return {\n        success: false,\n        status: \"😥 Something went wrong with getUserCouponList: \" + error.message,\n      };\n    }\n}","import { useEffect, useState } from \"react\";\nimport Banner from \"components/Banner.js\";\nimport CouponList from \"components/user/CouponList.js\";\nimport { getUserCouponList } from \"utils/user/user_contracts.js\";\n// import { getUserPinList } from \"utils/user_pinata.js\";\nimport { WalletMode } from \"../types\";\n\nconst UserMain = ({walletAddress}) => {\n    const [couponList, setCouponList] = useState([]);\n\n    useEffect(async () => {\n        const contractResponse = await getUserCouponList();\n        if (contractResponse.success) {\n            console.log(\"success\")\n            console.log(contractResponse.userAddresses)\n            console.log(contractResponse.couponURIs)\n            \n            // const pinataResponse = await getUserPinList(contractResponse.couponURIs);\n            // setCouponList(contractResponse.couponList);\n        } else {\n            console.log(contractResponse.message)\n        }\n    }, []);\n\n    return (\n        <div>\n            <Banner mode={WalletMode.USER} walletAddress={walletAddress} />\n            <CouponList walletAddress={walletAddress} couponList={couponList}/>\n        </div>\n    );\n}\n\nexport default UserMain;","export const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const obj = {\n          status: \"👆🏽 Write a message in the text-field above.\",\n          address: addressArray[0],\n        };\n        return obj;\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: (\n          <span>\n            <p>\n              {\" \"}\n              🦊{\" \"}\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install Metamask, a virtual Ethereum wallet, in your\n                browser.\n              </a>\n            </p>\n          </span>\n        ),\n      };\n    }\n  };\n  \n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],\n            status: \"👆🏽 Login\",\n          };\n        } else {\n          return {\n            address: \"\",\n            status: \"🦊 Connect to Metamask using the top right button.\",\n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: (\n          <span>\n            <p>\n              {\" \"}\n              🦊{\" \"}\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install Metamask, a virtual Ethereum wallet, in your\n                browser.\n              </a>\n            </p>\n          </span>\n        ),\n      };\n    }\n  };\n  ","import { useEffect, useState } from \"react\";\nimport { WalletMode } from \"types\";\nimport {\n    connectWallet,\n    getCurrentWalletConnected\n  } from \"utils/wallet.js\";\nimport { Dimmer, Loader, Card, Icon, Image } from \"semantic-ui-react\";\n\n\n\nconst LoginButton = ({setWalletAddress, setMode, setStatus}) => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(async () => {\n        const { address, status } = await getCurrentWalletConnected()\n        setWalletAddress(address)\n        setStatus(status)\n\n        if (address !== \"\") {\n            setMode(WalletMode.NONE)\n        }\n\n        addWalletListener()\n    }, []);\n\n    function addWalletListener() {\n        if (window.ethereum) {\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\n            if (accounts.length > 0) {\n                setWalletAddress(accounts[0])\n                setMode(WalletMode.NONE)\n            } else {\n                setWalletAddress(\"\")\n            }\n          })\n        } else {\n          setStatus(\n            <p>\n              {\" \"}\n              🦊 <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n                You must install MetaMask, a virtual Ethereum wallet, in your browser.\n              </a>\n            </p>\n          )\n        }\n    }\n    \n    const connectWalletPressed = async () => {\n        setIsLoading(true);\n        const walletResponse = await connectWallet()\n        setIsLoading(false);\n        setStatus(walletResponse.status)\n        setWalletAddress(walletResponse.address)\n        if (walletResponse.address !== \"\") {\n            setMode(WalletMode.NONE)\n        }\n    };\n\n      \n    return (\n      <div>\n          <Card onClick={connectWalletPressed} centered={true}>\n            <div style={{\n              \"textAlign\": \"center\",\n              \"paddingTop\": \"30px\",\n              \"paddinBbottom\": \"30px\"\n            }}>\n              {isLoading ? (\n                <div>\n                  <Icon.Group size='huge'>\n                    <Icon loading size='big' color='black' name='circle notch' />\n                    <Icon color='black' name='user'/>\n                  </Icon.Group>\n                </div>\n              ) : (\n                <div>\n                  <Icon.Group size='huge'>\n                    <Icon size='big' color='black' name='circle outline' />\n                    <Icon color='black' name='user'/>\n                  </Icon.Group>\n                </div>\n              )}\n            </div>\n            <Card.Content textAlign=\"center\">\n              <Card.Header>Welcome!</Card.Header>\n              <Card.Description>\n                Log-in with your wallet \n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name='users' />\n                22 users logged-in\n              </a>\n            </Card.Content>\n          </Card>\n      </div>\n    )\n}\n\nexport default LoginButton;","import { WalletMode } from \"../types\"; \nimport { Dimmer, Loader, Card, Icon, Image, Grid } from \"semantic-ui-react\";\n\nconst ModeSelector = ({setMode}) => {\n    const onStorePressed = () => {\n        setMode(WalletMode.STORE)\n    };\n\n    const onUserPressed = () => {\n        setMode(WalletMode.USER)\n    };\n\n    return (\n        <Grid>\n            <Grid.Column key={1} width={8}>                \n                <Card onClick={onStorePressed} centered={true}>\n                    <div style={{\n                        \"textAlign\": \"center\",\n                        \"paddingTop\": \"30px\",\n                        \"paddingBottom\": \"30px\"\n                    }}>\n                        <Icon.Group size='huge'>\n                            <Icon size='big' color='black' name='circle outline' />\n                            <Icon color='black' name='home'/>\n                        </Icon.Group>\n                    </div>\n                    <Card.Content textAlign=\"center\">\n                        <Card.Header>Store</Card.Header>\n                        <Card.Description>\n                            Stores who will issue NFT coupons go here\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            </Grid.Column>\n\n            <Grid.Column key={2} width={8}>\n                <Card onClick={onUserPressed} centered={true}>\n                    <div style={{\n                        \"textAlign\": \"center\",\n                        \"paddingTop\": \"30px\",\n                        \"paddingBottom\": \"30px\"\n                    }}>\n                        <Icon.Group size='huge'>\n                            <Icon size='big' color='black' name='circle outline' />\n                            <Icon color='black' name='child'/>\n                        </Icon.Group>\n                    </div>\n                    <Card.Content textAlign=\"center\">\n                       <Card.Header>User</Card.Header>\n                        <Card.Description>\n                            Users who will use NFT coupons go here\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            </Grid.Column>\n        </Grid>\n    );\n}\n\nexport default ModeSelector;","export default __webpack_public_path__ + \"static/media/test.01e9901b.jpeg\";","import 'semantic-ui-css/semantic.min.css'\nimport { useEffect, useState } from \"react\";\nimport { WalletMode } from \"../types\";\nimport StoreMain from \"pages/StoreMain.js\";\nimport UserMain from \"pages/UserMain.js\";\nimport LoginButton from \"components/LoginButton.js\";\nimport ModeSelector from \"components/ModeSelector.js\";\nimport main_img from './test.jpeg'\n\nimport {\n  Container,\n  Image,\n  Icon,\n  List,\n  TransitionablePortal,\n  Segment\n} from 'semantic-ui-react'\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [mode, setMode] = useState(\"\");\n  const [openMain, setOpenMain] = useState(true);\n  const [openStore, setOpenStore] = useState(false);\n  const [openUser, setOpenUser] = useState(false);\n\n  useEffect(async () => {\n    setStatus(status)\n    setMode(WalletMode.LOGOUT)\n  }, []);\n\n  useEffect(async () => {\n    if (mode === WalletMode.LOGOUT || mode === WalletMode.NONE) {\n      setOpenMain(true);\n      setOpenStore(false);\n      setOpenUser(false);\n    } else if (mode === WalletMode.STORE) {\n      setOpenMain(false);\n      setTimeout(() => {\n        setOpenStore(true);\n        setOpenUser(false);\n      }, 1000);\n    } else if (mode === WalletMode.USER) {\n      setOpenMain(false);\n      setTimeout(() => {\n        setOpenStore(false);\n        setOpenUser(true);\n      }, 1000);;\n    }\n  }, [mode]);\n\n  return (\n    <Container>\n      <TransitionablePortal\n        open={openMain}\n        transition={{ animation : \"fade up\", duration: 1000 }}\n      >\n        <Segment>\n          <div style={{\n                \"backgroundColor\": \"black\",\n          }}>\n              <Image src={main_img} alt=\"Main Image\" style={{\n                  \"minHeight\": \"140px\",\n                  \"opacity\": \"0.9\",\n                  \"brightness\": \"0.5\"\n              }} />\n          </div>\n          <div style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n          }}>\n              {mode === WalletMode.LOGOUT ? (\n                <LoginButton setWalletAddress={setWalletAddress} setMode={setMode} setStatus={setStatus} />\n              ) : mode === WalletMode.NONE ? (\n                <ModeSelector setMode={setMode} />\n              ) : (\n                <div></div>\n              )}\n          </div>\n          <div style={{\n              position: 'absolute',\n              top: '10%',\n              left: '0',\n              color: 'black',\n              textAlign: 'center',\n              width: '100%'\n          }}>\n              <p style={{fontSize: '40px', fontWeight: 'bold'}}>Make your own <span style={{color: 'red'}}>NFT</span> coupon!</p>\n              <List size='huge' horizontal>\n                <List.Item>\n                  <Icon name='computer' />\n                  <List.Content>\n                    <List.Header>Free yourself from offline coupon</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <Icon name='world' />\n                  <List.Content>\n                    <List.Header>No contracts with centralized platforms</List.Header>\n                  </List.Content>\n                </List.Item>\n                <List.Item>\n                  <Icon name='wi-fi' />\n                  <List.Content>\n                    <List.Header>Promote your brand using NFT</List.Header>\n                  </List.Content>\n                </List.Item>\n              </List>\n          </div>\n        </Segment>\n      </TransitionablePortal>\n      <TransitionablePortal\n        open={openStore}\n        transition={{ animation : \"fade up\", duration: 0 }}\n      >\n        <Segment>\n          <StoreMain walletAddress={walletAddress} />\n        </Segment>\n      </TransitionablePortal>\n      <TransitionablePortal\n        open={openUser}\n        transition={{ animation : \"fade up\", duration: 0 }}\n      >\n        <Segment>\n          <UserMain walletAddress={walletAddress} />\n        </Segment>\n      </TransitionablePortal>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from 'reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}